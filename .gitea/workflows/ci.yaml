on: [push]
name: Continuous Integration (tuono+rust)

jobs:
    build:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10
                  run_install: false

            - name: Set up node
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Set up pnpm cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.local/share/pnpm/store
                      node_modules
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install pnpm dependencies
              run: pnpm install --no-frozen-lockfile

            - name: Setup Rust toolchain
              uses: dtolnay/rust-toolchain@stable

            - name: Set up cargo cache
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cargo/registry
                      ~/.cargo/git
                      target
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-cargo-

            - name: Install system dependencies
              run: |
                  sudo apt update
                  sudo apt -y install build-essential libssl-dev pkg-config jq lsof
              shell: bash

            - name: Build rust app
              run: |
                  sed -i 's/# openssl/openssl/' Cargo.toml
                  sed -i 's/\/\/ \(.*\)/\1/' tuono.config.ts
                  TUONO_VERSION=$(jq -r '.dependencies.tuono' package.json)
                  cargo install tuono@${TUONO_VERSION}
                  chmod +x build.sh
                  ./build.sh
              shell: bash

            - name: Set app version
              run: |
                  DATE=$(date +'%y%m%d')
                  BUILD_NUM=$(git rev-list --count HEAD --since="midnight")
                  echo "VERSION=${DATE}-${BUILD_NUM}" >> $GITHUB_ENV
                  echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
                  echo "BUILD_TIME=$(date -u +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

            - name: Log into registry
              uses: docker/login-action@v3
              with:
                  registry: git.nzxl.space
                  username: nzxl
                  password: ${{ secrets.REGISTRY_AUTH }}

            - name: Build and Push Docker
              uses: docker/build-push-action@v4
              with:
                  context: .
                  platforms: linux/amd64
                  push: true
                  build-args: |
                      VERSION=${{ env.VERSION }}
                      COMMIT_SHA=${{ env.COMMIT_SHA }}
                      BUILD_TIME=${{ env.BUILD_TIME }}
                  tags: |
                      git.nzxl.space/nzxl/homedash-rs:latest
                      git.nzxl.space/nzxl/homedash-rs:${{ env.COMMIT_SHA }}
